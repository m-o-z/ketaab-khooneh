name: Ghafaseh Workflow

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    environment: production
    outputs:
      backend_changed: ${{ steps.changes.outputs.backend }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check for backend changes
        uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            backend:
              - 'backend/**'
              - '!backend/pb_*/'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push frontend
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker-build/Dockerfile.frontend # Assumes you have a Dockerfile for the frontend
          push: true
          build-args: |
            NEXT_PUBLIC_POCKETBASE_URL=${{ vars.ENV_POCKETBASE_URL }}
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/ketaab-khooneh-frontend:latest
            ${{ secrets.DOCKER_USERNAME }}/ketaab-khooneh-frontend:${{ github.sha }}

      - name: Build and push backend
        if: steps.changes.outputs.backend == 'true'
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile # Assumes you have a Dockerfile for the backend
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/ketaab-khooneh-backend:latest
            ${{ secrets.DOCKER_USERNAME }}/ketaab-khooneh-backend:${{ github.sha }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Deploy to VPS via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: 22
          script: |
            netplan apply
            docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
            cd ./docker
            docker compose pull
            docker compose down
            docker compose up -d --build
