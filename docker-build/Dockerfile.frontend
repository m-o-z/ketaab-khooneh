# ---------- Base image for building ----------
FROM node:20-slim AS builder
ARG NEXT_PUBLIC_VAPID_PUBLIC_KEY
ARG VAPID_PRIVATE_KEY
ARG NEXT_PUBLIC_API_URL
ARG NEXT_PUBLIC_POCKETBASE_URL
ARG NEXT_PUBLIC_DAYS_TO_REFRESH


ENV NEXT_PUBLIC_API_URL=$NEXT_PUBLIC_API_URL
ENV NEXT_PUBLIC_POCKETBASE_URL=$NEXT_PUBLIC_POCKETBASE_URL
ENV NEXT_PUBLIC_DAYS_TO_REFRESH=$NEXT_PUBLIC_DAYS_TO_REFRESH

RUN env

# Install dependencies for native modules (like sharp)
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    python3 \
    pkg-config \
    libvips-dev \
 && rm -rf /var/lib/apt/lists/*

# Set workdir
WORKDIR /app

# Copy lockfile and package.json first to leverage caching
COPY package.json pnpm-lock.yaml ./

# Install pnpm
RUN npm install -g pnpm

# Install deps for build (includes devDependencies)
RUN pnpm install --frozen-lockfile

# Copy rest of the project files
COPY . .

# Build the app
RUN pnpm build

# ---------- Runtime-only image ----------
FROM node:20-slim AS runner

ARG NEXT_PUBLIC_POCKETBASE_URL
ARG NEXT_PUBLIC_DAYS_TO_REFRESH
ARG REDIS_HOST
ARG REDIS_PORT
ARG APP_ENV
ARG POCKETBASE_ADMIN_USERNAME
ARG POCKETBASE_ADMIN_PASSWORD
ARG NEXT_PUBLIC_VAPID_PUBLIC_KEY
ARG VAPID_PRIVATE_KEY

ENV NEXT_PUBLIC_POCKETBASE_URL=$NEXT_PUBLIC_POCKETBASE_URL
ENV NEXT_PUBLIC_DAYS_TO_REFRESH=$NEXT_PUBLIC_DAYS_TO_REFRESH
ENV REDIS_HOST=$REDIS_HOST
ENV REDIS_PORT=$REDIS_PORT
ENV APP_ENV=$APP_ENV
ENV POCKETBASE_ADMIN_USERNAME=$POCKETBASE_ADMIN_USERNAME
ENV POCKETBASE_ADMIN_PASSWORD=$POCKETBASE_ADMIN_PASSWORD
ENV NEXT_PUBLIC_VAPID_PUBLIC_KEY=$NEXT_PUBLIC_VAPID_PUBLIC_KEY
ENV VAPID_PRIVATE_KEY=$VAPID_PRIVATE_KEY

RUN env

# Set workdir
WORKDIR /app

# Create non-root user
RUN useradd -m appuser

# Install dependencies for sharp runtime only (libvips)
RUN apt-get update && apt-get install -y --no-install-recommends \
    libvips curl \
 && rm -rf /var/lib/apt/lists/*

# Only copy the built app and required files
COPY --from=builder /app/public ./public
COPY --from=builder /app/.next ./.next
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/package.json ./package.json

# Set env vars
ENV NODE_ENV=production
ENV PORT=3000

# Use non-root user
USER appuser

# Expose Next.js port
EXPOSE 3000

# Healthcheck (optional)
HEALTHCHECK --interval=30s --timeout=3s \
  CMD curl -f http://localhost:${PORT}/ready || exit 1

# Start the app
CMD ["node", "node_modules/next/dist/bin/next", "start"]
